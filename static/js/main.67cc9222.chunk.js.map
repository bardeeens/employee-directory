{"version":3,"sources":["utils/API.js","components/Employee.js","components/EmployeeContainer.js","App.js","reportWebVitals.js","index.js"],"names":["query","axios","get","Employee","props","className","src","photo","first","last","email","phone","state","country","SearchResultContainer","result","filtered","searchAPI","API","then","data","setState","results","catch","err","console","log","this","map","item","name","picture","thumbnail","location","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAOe,EACL,SAASA,GACf,OAAOC,IAAMC,IAPD,8BAOeF,I,eCYhBG,MAjBf,SAAkBC,GAChB,OAGI,sBAAKC,UAAU,MAAf,UACE,sBAAKA,UAAU,aAAf,UAA4B,qBAAKC,IAAKF,EAAMG,QAAS,uBACpDH,EAAMI,MADP,IACeJ,EAAMK,QAErB,sBAAKJ,UAAU,aAAf,UAA6BD,EAAMM,MAAM,uBAAMN,EAAMO,SACrD,sBAAKN,UAAU,aAAf,UAA6BD,EAAMQ,MAAnC,IAA0C,uBAA1C,IAAiDR,EAAMS,QAAvD,WC+COC,E,4MAlDbF,MAAQ,CACNG,OAAQ,GACRC,SAAU,I,EAQZC,UAAY,SAAAjB,GACVkB,EAAWlB,GACRmB,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACP,EAAKC,SAAS,CACZN,OAAQK,EAAKE,QACbN,SAAUI,EAAKE,aAGlBC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,O,uDAZ9B,WACEG,KAAKV,UAAU,gB,qBAwBjB,c,oBAIA,WACE,OAEE,mCAEGU,KAAKf,MAAMI,SAASY,KAAI,SAACC,GAExB,OAAO,cAAC,EAAD,CAAUrB,MAAOqB,EAAKC,KAAKtB,MAAOC,KAAMoB,EAAKC,KAAKrB,KAAMF,MAAOsB,EAAKE,QAAQC,UAAWpB,MAAOiB,EAAKI,SAASrB,MAAOC,QAASgB,EAAKI,SAASpB,QAASH,MAAOmB,EAAKnB,MAAOC,MAAOkB,EAAKlB,iB,GA5C/JuB,aCgBrBC,MArBf,WACE,OACE,sBAAK9B,UAAU,YAAf,UACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SAA2B,qBAAKA,UAAU,UAAf,SAC/B,oBAAIA,UAAU,cAAd,sCAKE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,sBACA,qBAAKA,UAAU,WAAf,qBACA,qBAAKA,UAAU,WAAf,yBAEF,cAAC,EAAD,QCNS+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.67cc9222.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst BASEURL = \"https://randomuser.me/api/?\";\n\n\n\n\nexport default {\n  search: function(query) {\n    return axios.get(BASEURL + query);\n  }\n};\n","import React, { Component } from \"react\";\r\nimport '../utils/css/Employee.css';\r\n// import SearchResultContainer from './components/SearchResultContainer';\r\n\r\nfunction Employee(props) {\r\n  return (\r\n    \r\n     \r\n      <div className=\"row\">\r\n        <div className=\"col border\"><img src={props.photo} /><br/>\r\n        {props.first} {props.last}\r\n        </div>\r\n        <div className=\"col border\">{props.email}<br/>{props.phone}</div>\r\n        <div className=\"col border\">{props.state},<br/> {props.country} </div>\r\n      </div>\r\n      \r\n    \r\n   \r\n  );\r\n}\r\n\r\nexport default Employee;","import React, { Component } from \"react\";\n// import SearchForm from \"./SearchForm\";\n// import ResultList from \"./ResultList\";\nimport API from \"../utils/API\";\nimport Employee from \"./Employee\";\n\n\n\nclass SearchResultContainer extends Component {\n  \n  state = {\n    result: [],\n    filtered: []\n  };\n \n  // When this component mounts, search the Giphy API for pictures of kittens\n  componentDidMount() {\n    this.searchAPI(\"results=20\");\n  }\n\n  searchAPI = query => {\n    API.search(query)\n      .then(({ data }) => {\n        this.setState({\n          result: data.results,\n          filtered: data.results\n        })\n      })\n      .catch(err => console.log(err));\n  };\n\n  // handleInputChange = event => {\n  //   const name = event.target.name;\n  //   const value = event.target.value;\n  //   this.setState({\n  //     [name]: value\n  //   });\n  // };\n\n  // When the form is submitted, search the Giphy API for `this.state.search`\n  \n  country() {\n    \n  }\n\n  render() {\n    return (\n     \n      <>\n        { \n         this.state.filtered.map((item) => {\n          // console.log(item);\n          return <Employee first={item.name.first} last={item.name.last} photo={item.picture.thumbnail} state={item.location.state} country={item.location.country} email={item.email} phone={item.phone} />\n        })}\n        \n      </>\n    );\n  }\n}\n\nexport default SearchResultContainer;\n","import './App.css';\nimport SearchResultContainer from './components/EmployeeContainer';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-12\"><div className=\"wrapper\">\n    <h1 className=\"typing-demo\">\n      Employee Directory\n    </h1>\n</div></div>\n        </div>\n      <div className=\"row\">\n        <div className=\"col bold\">Employee</div>\n        <div className=\"col bold\">Contact</div>\n        <div className=\"col bold\">Location</div>\n      </div>\n      <SearchResultContainer />\n    </div>\n   \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}